digraph "Heuristic&lt; S &gt;"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Heuristic\< S \>\n||+ heuristicFunction()\l+ ~Heuristic()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{MICheuristic\< S, \>\n|- targets\l- width\l|+ MICheuristic()\l+ heuristicFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMICheuristic.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{MICheuristic2\< S, \>\n|- targets\l- width\l|+ MICheuristic2()\l+ heuristicFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMICheuristic2.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{MIOCheuristic\< S, \>\n|- rraStarSearches\l|+ MIOCheuristic()\l+ heuristicFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMIOCheuristic.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{MIOCheuristic2\< S, \>\n|- rraStarSearches\l|+ MIOCheuristic2()\l+ heuristicFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMIOCheuristic2.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{ManhattanHeuristic\l\< S, \>\n|- target\l- width\l|+ ManhattanHeuristic()\l+ heuristicFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classManhattanHeuristic.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{OptimalDistanceHeuristic\l\< S, \>\n|- rraStarSearch\l|+ OptimalDistanceHeuristic()\l+ heuristicFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classOptimalDistanceHeuristic.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{SICheuristic\< S, \>\n|- targets\l- width\l|+ SICheuristic()\l+ heuristicFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSICheuristic.html",tooltip=" "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{SIOCheuristic\< S, \>\n|- rraStarSearches\l|+ SIOCheuristic()\l+ heuristicFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSIOCheuristic.html",tooltip=" "];
}
